main = "Solar Radiation",
xlab =
)
hist(solar.plot,
main = "Solar Radiation",
xlab = "Solar R. Values"
)
hist(solar.plot,
main = "Solar Radiation",
xlab = "Solar R. Values",
col = "lightblue2"
)
hist(solar.plot,
main = "Solar Radiation",
xlab = "Solar R. Values",
col = "peach"
)
hist(solar.plot,
main = "Solar Radiation",
xlab = "Solar R. Values",
col = "lightblue2"
)
temp.plot <- airquality$Temp
summary(temp.plot)
hist(temp.plot,
main = "Temperature",
xlab = "Temperature Values"
col = "lightpink")
hist(temp.plot,
main = "Temperature",
xlab = "Temperature Values"
col = "lightred")
hist(temp.plot,
main = "Temperature",
xlab = "Temperature Values",
col = "lightred")
hist(temp.plot,
main = "Temperature",
xlab = "Temperature Values",
col = "lightpink")
hist(temp.plot,
main = "Temperature",
xlab = "Temperature Values",
col = "lightpurple")
hist(temp.plot,
main = "Temperature",
xlab = "Temperature Values",
col = "plum1")
?plot
plot(air.month, ty.mean,
type = "l",
col = "red",
ylim = c(5, 90)),
main = "Wind Speed & Temperature\nMay - Sept",
xlab = "Months",
ylab = "Mean Values")
plot(air.month, ty.mean,
type = "l",
col = "red",
ylim = c(5, 90)),
main = "Wind Speed & Temperature\nMay - Sept",
xlab = "Months",
ylab = "Mean Values")
plot(air.month, ty.mean,
type = "l",
col = "red",
ylim = c(5, 90)),
main = "Wind Speed & Temperature\nMay - Sept",
xlab = "Months",
ylab = "Mean Values")
lines(air.month, y.mean, col = "blue")
plot(air.month, ty.mean,
type = "l",
col = "red",
ylim = c(5, 90)),
main = "Wind Speed & Temperature\nMay - Sept",
xlab = "Months",
ylab = "Mean Values")
plot(air.month, ty.mean,
type = "l", col = "red", ylim = c(5, 90)), main = "Wind Speed & Temperature\nMay - Sept", xlab = "Months", ylab = "Mean Values")
plot(air.month, ty.mean,
type = "l",
col = "red",
ylim = c(5, 90),
main = "Wind Speed & Temperature\nMay - Sept",
xlab = "Months", ylab = "Mean Values")
lines(air.month, y.mean, col = "blue")
parenthood2 <- read.csv("~/Downloads/parenthood2.csv")
View(parenthood2)
plot(baby.sleep, days)
plot(parenthood2$baby.sleep, parenthood2$day)
plot(parenthood2$baby.sleep, parenthood2$day
type = "l")
plot(parenthood2$baby.sleep, parenthood2$day,
type = "l")
plot(parenthood2$day, parenthood2$baby.sleep,
type = "l")
plot(parenthood2$day, parenthood2$baby.sleep,
type = "l",
main = "Baby Sleep Patterns",
xlab = "Days",
ylab = "Hours Baby Sleeps")
plot(parenthood2$day, parenthood2$baby.sleep,
type = "d",
main = "Baby Sleep Patterns",
xlab = "Days",
ylab = "Hours Baby Sleeps")
plot(parenthood2$day, parenthood2$baby.sleep,
#type = "d",
main = "Baby Sleep Patterns",
xlab = "Days",
ylab = "Hours Baby Sleeps")
plot(parenthood2$day, parenthood2$baby.sleep,
type = "l",
main = "Baby Sleep Patterns",
xlab = "Days",
ylab = "Hours Baby Sleeps")
plot(parenthood2$day, parenthood2$baby.sleep,
type = "l",
main = "Baby Sleep Patterns",
xlab = "Days",
ylab = "Hours Baby Sleeps",
col="blue")
plot(parenthood2$day, parenthood2$baby.sleep,
type = "l",
main = "Baby Sleep Patterns",
xlab = "Days",
ylab = "Hours Baby Sleeps",
col="purple")
plot(parenthood2$day, parenthood2$dan.sleep,
type = "l",
main = "Baby Sleep Patterns",
xlab = "Days",
ylab = "Hours Baby Sleeps",
col="blue")
plot(parenthood2$day, parenthood2$dan.sleep,
type = "l",
main = "Dan Sleep Patterns",
xlab = "Days",
ylab = "Hours Dan Sleeps",
col="blue")
cor(parenthood2$dan.sleep, parenthood2$baby.sleep)
cor(parenthood2$dan.sleep, X)
cor(parenthood2$dan.sleep, parenthood2$dan.grump)
cor(parenthood2$dan.sleep, parenthood2$baby.sleep)
dadSleep = parenthood2$dan.sleep
babySleep = parenthood2$baby.sleep
cor(dadSleep, babySleep)
cor(babySleep, dadSleep)
cor.test(babySleep, dadSleep)
plot(dadSleep, babySleep)
lm(dadSleep, babySleep)
abline(lm(dadSleep, babySleep))
lm(formula = dadSleep ~babySleep)
lm(dadSleep ~ babySleep)
plot(dadSleep ~ babySleep)
plot(lm(dadSleep ~ babySleep))
plot(dadSleep, babySleep)
abline(4.4791, 0.3085)
plot(lm(dadSleep ~ babySleep))
plot(dadSleep, babySleep,
xcol = "blue")
plot(dadSleep, babySleep,)
abline(4.4791, 0.3085)
warnings()
cor(dadSleep)
cor(parenthood2$dan.sleep)
`CD.mp&C.data...Sheet1` <- read.csv("~/Downloads/CD mp&C data - Sheet1.csv")
View(`CD.mp&C.data...Sheet1`)
moviesound <- read.csv("~/Downloads/moviesound.csv")
View(moviesound)
plot(moviesound$Sound.Silence, moviesound$enjoyment.percentage)
plot(moviesound$Sound.Silence, moviesound$info.correct)
plot(moviesound$Sound.Silence, moviesound$info.correct, type=scatter)
scatter.smooth(moviesound$Sound.Silence, moviesound$info.correct)
plot(moviesound$Sound.Silence, moviesound$enjoyment.percentage)
t.test(moviesound$enjoyment.percentage~moviesound$Sound.Silence)
t.test(moviesound$info.correct~moviesound$Sound.Silence)
t.test(moviesound$info.correct~moviesound$Sound.Silence, var=TRUE)
t.test(moviesound$enjoyment.percentage~moviesound$Sound.Silence, var=TRUE)
moviesound$Sound.Silence$sound
moviesound$Sound.Silence
moviesound$Sound.Silence[sound]
moviesound$Sound.Silence(sound)
wind.mos <- split(airquality$Wind, airquality$Month)
wind.mos
silent.enjoy <- split(moviesound$Sound.Silence, moviesound$enjoyment.percentage)
silent.enjoy
enjoyed.silent <- split(moviesound$enjoyment.percentage, moviesound$Sound.Silence)
enjoyed.silent
enjoyed.silent$`silent `
plot(enjoyed.silent$`silent `, enjoyed.silent$sound)
plot(moviesound$Sound.Silence, moviesound$enjoyment.percentage)
plot(moviesound$Sound.Silence, moviesound$enjoyment.percentage,
ylab = Enjoyment Percentage)
plot(moviesound$Sound.Silence, moviesound$enjoyment.percentage,
ylab = "Enjoyment Percentage")
plot(moviesound$Sound.Silence, moviesound$enjoyment.percentage,
ylab = "Enjoyment Percentage",
main = "Average Level of Enjoyment",
col="blue")
plot(moviesound$Sound.Silence, moviesound$enjoyment.percentage,
ylab = "Enjoyment Percentage",
main = "Average Level of Enjoyment",
col="lightblue")
plot(moviesound$Sound.Silence, moviesound$enjoyment.percentage,
ylab = "Information Retainment Percentage",
main = "Average Information Retention",
col="lightred")
plot(moviesound$Sound.Silence, moviesound$enjoyment.percentage,
ylab = "Information Retainment Percentage",
main = "Average Information Retention",
col="plum2")
plot(moviesound$Sound.Silence, moviesound$info.correct,
ylab = "Information Retainment Percentage",
main = "Average Information Retention",
col="plum2")
plot(moviesound$Sound.Silence, moviesound$sound.correct,
ylab = "Enjoyment Percentage",
main = "Average Level of Enjoyment",
col="blue")
plot(moviesound$Sound.Silence, moviesound$sound.correct,
ylab = "Percentage Correct",
main = "Correct Sound Related Information",
col="blue")
plot(moviesound$Sound.Silence, moviesound$nonsound.correct,
ylab = "Percentage Correct",
main = "Correct Non-Sound Related Information",
col="orange")
t.test(moviesound$sound.correct~moviesound$Sound.Silence, var=TRUE)
t.test(moviesound$nonsound.correct~moviesound$Sound.Silence, var=TRUE)
plot(enjoyed.silent$`silent `, enjoyed.silent$sound)
plot(enjoyed.silent)
enjoyed.silent
plot(enjoyed.silent, moviesound$Sound.Silence)
summary(moviesound)
summary(temp.plot)
solar.plot <- airquality$Solar.R
summary(solar.plot)
describe(solar.plot)
temp.plot <- airquality$Temp
summary(temp.plot)
library("psych", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
describe(moviesound)
var(moviesound)
var(moviesound$Sound.Silence$'sound')
var(enjoyed.silent)
var(moviesound$sound.correct)
t.test(moviesound$enjoyment.percentage~moviesound$Sound.Silence, var=TRUE)
enjoyed.silent
plot(density(enjoyed.silent$`silent `))
plot(density(enjoyed.silent$`sound `))
plot(density(enjoyed.silent$sound))
describe(moviesound)
#T-Tests(4)
t.test(moviesound$enjoyment.percentage~moviesound$Sound.Silence, var=TRUE)
plot(moviesound$Sound.Silence, moviesound$enjoyment.percentage,   #Enjoyment Boxplot
ylab = "Enjoyment Percentage",
main = "Average Level of Enjoyment",
col="lightblue")
summary(moviesound$Sound.Silence)
summary(moviesound$Sound.Silence, moviesound$enjoyment.percentage)
summary(moviesound$enjoyment.percentage)
describe(moviesound$enjoyment.percentage)
enjoyed.silent
describe(enjoyed.silent$`silent `)
var(enjoyed.silent$`silent `)
describe(enjoyed.silent$sound)
var(enjoyed.silent$sound)
#T-Tests(4)
t.test(moviesound$enjoyment.percentage~moviesound$Sound.Silence, var=TRUE)
overinfo.splits <- split(moviesound$info.correct, moviesound$Sound.Silence)
overinfo.splits
describe(overinfo.splits$`silent `)
var(overinfo.splits$`silent `)
describe(overinfo.splits$sound)
var(overinfo.splits$sound)
t.test(moviesound$info.correct~moviesound$Sound.Silence, var=TRUE)
soundinfo.splits <- split(moviesound$sound.correct, moviesound$Sound.Silence)
soundinfo.splits
describe(soundinfo.splits$`silent `)
var(soundinfo.splits$`silent `)
describe(soundinfo.splits$sound)
var(soundinfo.splits$sound)
t.test(moviesound$sound.correct~moviesound$Sound.Silence, var=TRUE)
nonsound.splits <- split(moviesound$nonsound.correct, moviesound$nonsound.correct)
nonsound.splits <- split(moviesound$nonsound.correct, moviesound$Sound.Silence)
describe(nonsound.splits$`silent `)
describe(nonsound.splits$`silent `)
var(nonsound.splits$`silent `)
describe(nonsound.splits$sound)
(nonsound.splits$sound)
var(nonsound.splits$sound)
nonsound.splits <- split(moviesound$nonsound.correct, moviesound$Sound.Silence)
t.test(moviesound$nonsound.correct~moviesound$Sound.Silence, var=TRUE)
describe(moviesound$enjoyment.percentage)
library("psych", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
summary(moviesound$enjoyment.percentage)
var(moviesound$sound.correct)
describe(enjoyed.silent$`silent `)
var(enjoyed.silent$`silent `)
describe(enjoyed.silent$sound)
var(enjoyed.silent$sound)
describe(soundinfo.splits$`silent `)
describe(soundinfo.splits$sound)
plot(moviesound$Sound.Silence, moviesound$sound.correct,           #Sound Related Boxplot
ylab = "Percentage Correct",
main = "Correct Sound Related Information",
col="blue")
plot(moviesound$Sound.Silence, moviesound$nonsound.correct,       #Non-Sound Related Boxplot
ylab = "Percentage Correct",
main = "Correct Non-Sound Related Information",
col="orange")
state.17 <- read.csv("~/Downloads/state-17.csv", header=FALSE)
View(state.17)
source('~/Desktop/Regional_Hip_Hop/LoadData.R', echo=TRUE)
str(corpus)
barplot(corpus$ARE)
corpus$OTL
plot(corpus)
plot(corpus$duration)
View(data)
View(data)
plot(corpus$rhythm)
$rhythm
corpus
batplot(data$NoteValue)
barplot(data$NoteValue)
plot(data$NoteValue)
plot(data$NoteValue, data$Stress)
margin.table(data, 1)
margin.table(data$NoteValue, 1)
str(data$Rhythm)
barplot(data$Rhythm)
barplot(data$Rhythm, data$Stress)
barplot(data$Rhythm, data$NoteValue)
barplot(data$NoteValue)
prop.table(data$Rhythm)
View(corpus)
View(corpus)
plot(data$ARE)
plot(data$Rhythm)
plot(data$NoteValue)
plot(data$Stress)
plot(data$Rest)
plot(data$Bar)
plot(corpus)
corpus
str(corpus)
regions <- table(data$ARE)
regions
hist(data$Rhythm)
hist(data$NoteValue)
pie(data$Stress)
pie(data$NoteValue)
pie(data$Rhythm)
fields(corpus)
corpus %hum<% ~table(RRD)
corpus$ARE <- corpus %hum>% ~gsub(ARE, '\t*', '')
corpus$ARE <- corpus %hum>% ~gsub(x = ARE, '\t*', '')
corpus$ARE <- corpus %hum>% ~gsub(x = ARE, '\t*', '')
corpus$OTL <- corpus %hum>% ~gsub(x = OTL, '\t*', '')
corpus$COM <- corpus %hum>% ~gsub(x = COM, '\t*', '')
corpus %hum<% ~table(RRD)
corpus <- readHumdrum('Regional_Hip_Hop/Rhythmic Transcriptions/^[1-5]/*.txt')
as.data.frame(as.matrix(corpus), stringsAsFactors = FALSE) -> data
colnames(data) <- c('NoteValue', 'Stress', 'Rest', 'Lyrics')
data$Rhythm <- as.decimal(data$NoteValue)
corpus$ARE <- corpus %hum>% ~gsub(x = ARE, '\t*', '')
corpus$OTL <- corpus %hum>% ~gsub(x = OTL, '\t*', '')
corpus$COM <- corpus %hum>% ~gsub(x = COM, '\t*', '')
corpus %hum<% ~table(RRD)
corpus$RRD <- corpus %hum>% ~gsub(x = RRD, '\t*', '')
corpus %hum<% ~table(RRD)
source('~/Desktop/Regional_Hip_Hop/LoadData.R', echo=TRUE)
source('~/Desktop/Regional_Hip_Hop/LoadData.R', echo=TRUE)
source('~/Desktop/Regional_Hip_Hop/LoadData.R', echo=TRUE)
setwd("/Users/ChaDe/Desktop/Regional_Hip_Hip")
setwd("~/Users/ChaDe/Desktop/Regional_Hip_Hip")
setwd("/Users/ChaDe/Desktop/Regional_Hip_Hop")
setwd("/Users/ChaDe/Desktop/Regional_Hip_Hop")
library(humdrumR)
corpus <- readHumdrum('Rhythmic Transcriptions/^[1-5]/*.txt')
source('~/Desktop/Regional_Hip_Hop/LoadData.R', echo=TRUE)
data
data$Rhythm
data[1:10,]
data[,1:3]
data[,1:4]
data[ , "Rest"]
subset(data , ARE == 'Atlanta')
subset(data, ARE == 'Atlanta')
subset(data, ARE == 'Atlanta')$Rhythm
subset(data, ARE == 'Atlanta')$Rhythm %>% table
subset(data, ARE == 'Atlanta')$Rhythm %>% table %>% barplot
subset(data, ARE == 'New York')$Rhythm %>% table %>% barplot
subset(data, ARE == 'Atlanta')$NoteValue %>% table %>% barplot
subset(data, ARE == 'Atlanta')$NoteValue
subset(data, ARE == 'Atlanta')$NoteValue %>% table
table(data$ARE,data$NoteValue)
table(data$ARE,data$NoteValue) %>% barplot
table(data$ARE,data$NoteValue) %>% barplot(., beside=TRUE)
data$NoteVale == '4'
data$NoteValue == '4'
data$NoteValue %in% c('4', '8')
data$NoteValue %in% c('4', '8', '16')
data$NoteValue %in% c('12','6','24')
data$NoteValue %>% table
data$NoteValue %in% c('12','6','24', '3')
data[data$NoteValue %in% c('12','6','24', '3'), ]
data[data$NoteValue %in% c('12','6','24', '3') & ARE == 'Atlanta', ]
data[data$NoteValue %in% c('12','6','24', '3') & data$ARE == 'Atlanta', ]
data$NoteValue %in% c('12','6','24', '3')
data$NoteValue %in% c('12','6','24', '3') -> data$Triplet
data
table(data$Triplet, data$ARE)
table(data$Triplet, data$ARE) %>% barplot
table(data$Triplet, data$ARE) %>% barplot(., beside=T)
data$Rhythm
data
data[Bar == 1]
data[Bar == 1,]
data[data$Bar == 1,]
data$OTL
data[data$Bar == 1 & data$OTL == 'LookinAss',]
data$Rhythm
cumsum(data$Rhythm)
cumsum(subset(data, OTL =='LookinAss')$Rhythm)
cumsum(subset(data, OTL =='LookinAss')$Rhythm) %% 1
barplot(table(cumsum(subset(data, OTL =='LookinAss')$Rhythm) %% 1))
read.table('Rhyme_Analyzer_Rhyme_DataSet.txt')
read.table('Rhyme_Analyzer_Rhyme_DataSet.txt', sep = ',')
read.table('Regional Hip Hop_Rhyme_Analysis_Data.csv', sep = ',')
read.table('Regional Hip Hop_Rhyme_Analysis_Data.csv', sep = ',')
read.table('Regional Hip Hop_Rhyme_Analysis_Data.csv', sep = ',', header=T)
tapply(X = data$ARE, INDEX = data$Rhythm, FUN = mean)
tapply(X = data$Rhythm, INDEX = data$ARE, FUN = mean)
barplot(tapply(X = data$Rhythm, INDEX = data$ARE, FUN = mean))
barplot(tapply(X = data$Rhythm, INDEX = data$ARE, FUN = mean), xlab = data$ARE)
rhymeData <- read.table('Regional Hip Hop_Rhyme_Analysis_Data.csv', sep = ',', header=T)
rhymeData$City
library(readr)
Regional_Hip_Hop_Rhyme_Analysis_Data <- read_csv("Regional Hip Hop_Rhyme_Analysis_Data.csv")
View(Regional_Hip_Hop_Rhyme_Analysis_Data)
View(rhymeData)
View(rhymeData)
View(rhymeData)
View(rhymeData)
View(rhymeData)
View(rhymeData)
View(Regional_Hip_Hop_Rhyme_Analysis_Data)
rhymeData <- Regional_Hip_Hop_Rhyme_Analysis_Data
rhymeData$City
library(readr)
Regional_Hip_Hop_Rhyme_Analysis_Data <- read_csv("Regional Hip Hop_Rhyme_Analysis_Data.csv")
View(Regional_Hip_Hop_Rhyme_Analysis_Data)
rhymeData <- Regional_Hip_Hop_Rhyme_Analysis_Data
rhymeData$City
tapply(X = rhymeData$`Tempo in BPM`, INDEX = rhymeData$City, FUN = mean)
rhymeData$`Tempo in BPM`
library(readr)
Regional_Hip_Hop_Rhyme_Analysis_Data <- read_csv("Regional Hip Hop_Rhyme_Analysis_Data.csv")
View(Regional_Hip_Hop_Rhyme_Analysis_Data)
rhymeData <- Regional_Hip_Hop_Rhyme_Analysis_Data
rhymeData$`Tempo in BPM`
tapply(X = rhymeData$`Tempo in BPM`, INDEX = rhymeData$City, FUN = mean)
barplot(tapply(X = rhymeData$`Tempo in BPM`, INDEX = rhymeData$City, FUN = mean))
rhymeData$`Syllables per line`
barplot(tapply(X = rhymeData$`Syllables per line`, INDEX = rhymeData$City, FUN = mean))
tapply(X = rhymeData$`Syllables per line`, INDEX = rhymeData$City, FUN = mean)
tapply(X = rhymeData$`Syllables per word`, INDEX = rhymeData$City, FUN = mean)
tapply(X = rhymeData$`Syllable Variation`, INDEX = rhymeData$City, FUN = mean)
barplot(tapply(X = rhymeData$`Syllable Variation`, INDEX = rhymeData$City, FUN = mean))
tapply(X = rhymeData$`Novel Word Proportion`, INDEX = rhymeData$City, FUN = mean)
barplot(tapply(X = rhymeData$`Novel Word Proportion`, INDEX = rhymeData$City, FUN = mean))
barplot(tapply(X = rhymeData$`Rhymes per line`, INDEX = rhymeData$City, FUN = mean))
(tapply(X = rhymeData$`Rhymes per line`, INDEX = rhymeData$City, FUN = mean)
tapply(X = rhymeData$`Rhymes per line`, INDEX = rhymeData$City, FUN = mean)
tapply(X = rhymeData$`Rhymes per syllable`, INDEX = rhymeData$City, FUN = mean)
tapply(X = rhymeData$`Rhyme Density`, INDEX = rhymeData$City, FUN = mean)
barplot(tapply(X = rhymeData$`Rhyme Density`, INDEX = rhymeData$City, FUN = mean))
tapply(X = rhymeData$`End Pairs Per Line`, INDEX = rhymeData$City, FUN = mean)
barplot(tapply(X = rhymeData$`End Pairs Per Line`, INDEX = rhymeData$City, FUN = mean))
tapply(X = rhymeData$`End Pairs Grown`, INDEX = rhymeData$City, FUN = mean)
barplot(tapply(X = rhymeData$`End Pairs Grown`, INDEX = rhymeData$City, FUN = mean))
tapply(X = rhymeData$`End Pairs Shrunk`, INDEX = rhymeData$City, FUN = mean)
barplot(tapply(X = rhymeData$`End Pairs Shrunk`, INDEX = rhymeData$City, FUN = mean))
tapply(X = rhymeData$`End Pairs Even`, INDEX = rhymeData$City, FUN = mean)
barplot(tapply(X = rhymeData$`End Pairs Even`, INDEX = rhymeData$City, FUN = mean))
tapply(X = rhymeData$`Average End Score`, INDEX = rhymeData$City, FUN = mean)
barplot(tapply(X = rhymeData$`Average End Score`, INDEX = rhymeData$City, FUN = mean))
barplot(tapply(X = rhymeData$`Average End Syllable Score`, INDEX = rhymeData$City, FUN = mean))
barplot(tapply(X = rhymeData$`Singles per Rhyme`, INDEX = rhymeData$City, FUN = mean))
barplot(tapply(X = rhymeData$`Doubles per Rhyme`, INDEX = rhymeData$City, FUN = mean))
tapply(X = rhymeData$`Doubles per Rhyme`, INDEX = rhymeData$City, FUN = mean)
tapply(X = rhymeData$`Triples per Rhyme`, INDEX = rhymeData$City, FUN = mean)
barplot(tapply(X = rhymeData$`Triples per Rhyme`, INDEX = rhymeData$City, FUN = mean))
tapply(X = rhymeData$`Quads per Rhyme`, INDEX = rhymeData$City, FUN = mean)
barplot(tapply(X = rhymeData$`Quads per Rhyme`, INDEX = rhymeData$City, FUN = mean))
barplot(tapply(X = rhymeData$`Longs per Rhyme`, INDEX = rhymeData$City, FUN = mean))
tapply(X = rhymeData$`Longs per Rhyme`, INDEX = rhymeData$City, FUN = mean)
tapply(X = rhymeData$`Perfect Rhymes`, INDEX = rhymeData$City, FUN = mean)
barplot(tapply(X = rhymeData$`Perfect Rhymes, INDEX = rhymeData$City, FUN = mean))
barplot(tapply(X = rhymeData$`Longs per Rhyme`, INDEX = rhymeData$City, FUN = mean))
tapply(X = rhymeData$`Perfect Rhymes`, INDEX = rhymeData$City, FUN = mean)
barplot(tapply(X = rhymeData$`Perfect Rhymes`, INDEX = rhymeData$City, FUN = mean))
tapply(X = rhymeData$`Line Internals per Line`, INDEX = rhymeData$City, FUN = mean)
barplot(tapply(X = rhymeData$`Line Internals per Line`, INDEX = rhymeData$City, FUN = mean))
barplot(tapply(X = rhymeData$`Links per line`, INDEX = rhymeData$City, FUN = mean))
barplot(tapply(X = rhymeData$`bridges per line`, INDEX = rhymeData$City, FUN = mean))
barplot(tapply(X = rhymeData$`Compounds per line`, INDEX = rhymeData$City, FUN = mean))
barplot(tapply(X = rhymeData$`Chaining per line`, INDEX = rhymeData$City, FUN = mean))
