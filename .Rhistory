wind.may.mean <- mean(c(wind.mos$`5`))
wind.june.mean <- mean(c(wind.mos$`6`))
wind.jul.mean <- mean(c(wind.mos$`7`))
wind.aug.mean <- mean(c(wind.mos$`8`))
wind.sept.mean <- mean(c(wind.mos$`9`))
y.mean <- c(wind.may.mean, wind.june.mean, wind.jul.mean,
wind.aug.mean, wind.sept.mean)
y.mean
plot(airquality$Month, y.mean)
plot(length(y.mean), y.mean)
plot(length(y.mean), c(y.mean))
plot(airquality$Month, c(y.mean))
length(y.mean)
plot(length(y.mean), y.mean)
barplot(y.mean)
barplot(y.mean, airquality$Wind)
barplot(y.mean, airquality$Wind)
barplot(y.mean)
temp.mos <- split(airquality$Temp, airquality$Month)
temp.mos
temp.may.mean <- mean(c(temp.mos$`5`))
temp.june.mean <- mean(c(temp.mos$`6`))
temp.jul.mean <- mean(c(temp.mos$`7`))
temp.aug.mean <- mean(c(temp.mos$`8`))
temp.sept.mean <- mean(c(temp.mos$`9`))
ty.mean <- c(temp.may.mean, temp.june.mean, temp.jul.mean,
temp.aug.mean, temp.sept.mean)
barplot(ty.mean)
air.month <- c("May", "June", "July", "Aug", "Sept")
plot(air.month, ty.mean)
plot(air.month, y.mean)
air.month
air.month <- c(5, 6, 7, 8, 9)
plot(air.month, ty.mean)
plot(air.month, ty.mean, type = "l")
plot(air.month, ty.mean, type = "l", col = "red")
lines(air.month, y.mean, col = "blue")
lines(air.month, y.mean, col = "blue")
plot(air.month, y.mean, col = "blue")
plot(air.month, y.mean, type = "l" col = "blue")
plot(air.month, y.mean, type = "l", col = "blue")
plot(air.month, ty.mean, type = "l", col = "red")
(air.month, ty.mean, type = "l", col = "red")
plot(air.month, ty.mean, type = "l", col = "red")
plot(air.month, ty.mean, type = "l", col = "red")
lines(air.month, y.mean, col = "blue")
plot(air.month, ty.mean, type = "l", col = "red")
lines(air.month, y.mean, col = "blue")
plot(air.month, ty.mean, type = "l", col = "red", ylim = c(5, 90))
plot(air.month, ty.mean, type = "l", col = "red", ylim = c(5, 90))
lines(air.month, y.mean, col = "blue")
solar.plot <- airquality$Solar.R
solar.plot
hist(solar.plot)
?hist
hist(solar.plot, main = "Solar Radiation\nHistogram")
hist(solar.plot,
main = "Solar Radiation",
xlab
)
hist(solar.plot,
main = "Solar Radiation",
xlab
)
summary(solar.plot)
describe(solar.plot)
plot(solar.plot, airquality$Month)
plot(solar.plot, airquality$X)
hist(solar.plot,
main = "Solar Radiation",
xlab =
)
hist(solar.plot,
main = "Solar Radiation",
xlab = "Solar R. Values"
)
hist(solar.plot,
main = "Solar Radiation",
xlab = "Solar R. Values",
col = "lightblue2"
)
hist(solar.plot,
main = "Solar Radiation",
xlab = "Solar R. Values",
col = "peach"
)
hist(solar.plot,
main = "Solar Radiation",
xlab = "Solar R. Values",
col = "lightblue2"
)
temp.plot <- airquality$Temp
summary(temp.plot)
hist(temp.plot,
main = "Temperature",
xlab = "Temperature Values"
col = "lightpink")
hist(temp.plot,
main = "Temperature",
xlab = "Temperature Values"
col = "lightred")
hist(temp.plot,
main = "Temperature",
xlab = "Temperature Values",
col = "lightred")
hist(temp.plot,
main = "Temperature",
xlab = "Temperature Values",
col = "lightpink")
hist(temp.plot,
main = "Temperature",
xlab = "Temperature Values",
col = "lightpurple")
hist(temp.plot,
main = "Temperature",
xlab = "Temperature Values",
col = "plum1")
?plot
plot(air.month, ty.mean,
type = "l",
col = "red",
ylim = c(5, 90)),
main = "Wind Speed & Temperature\nMay - Sept",
xlab = "Months",
ylab = "Mean Values")
plot(air.month, ty.mean,
type = "l",
col = "red",
ylim = c(5, 90)),
main = "Wind Speed & Temperature\nMay - Sept",
xlab = "Months",
ylab = "Mean Values")
plot(air.month, ty.mean,
type = "l",
col = "red",
ylim = c(5, 90)),
main = "Wind Speed & Temperature\nMay - Sept",
xlab = "Months",
ylab = "Mean Values")
lines(air.month, y.mean, col = "blue")
plot(air.month, ty.mean,
type = "l",
col = "red",
ylim = c(5, 90)),
main = "Wind Speed & Temperature\nMay - Sept",
xlab = "Months",
ylab = "Mean Values")
plot(air.month, ty.mean,
type = "l", col = "red", ylim = c(5, 90)), main = "Wind Speed & Temperature\nMay - Sept", xlab = "Months", ylab = "Mean Values")
plot(air.month, ty.mean,
type = "l",
col = "red",
ylim = c(5, 90),
main = "Wind Speed & Temperature\nMay - Sept",
xlab = "Months", ylab = "Mean Values")
lines(air.month, y.mean, col = "blue")
parenthood2 <- read.csv("~/Downloads/parenthood2.csv")
View(parenthood2)
plot(baby.sleep, days)
plot(parenthood2$baby.sleep, parenthood2$day)
plot(parenthood2$baby.sleep, parenthood2$day
type = "l")
plot(parenthood2$baby.sleep, parenthood2$day,
type = "l")
plot(parenthood2$day, parenthood2$baby.sleep,
type = "l")
plot(parenthood2$day, parenthood2$baby.sleep,
type = "l",
main = "Baby Sleep Patterns",
xlab = "Days",
ylab = "Hours Baby Sleeps")
plot(parenthood2$day, parenthood2$baby.sleep,
type = "d",
main = "Baby Sleep Patterns",
xlab = "Days",
ylab = "Hours Baby Sleeps")
plot(parenthood2$day, parenthood2$baby.sleep,
#type = "d",
main = "Baby Sleep Patterns",
xlab = "Days",
ylab = "Hours Baby Sleeps")
plot(parenthood2$day, parenthood2$baby.sleep,
type = "l",
main = "Baby Sleep Patterns",
xlab = "Days",
ylab = "Hours Baby Sleeps")
plot(parenthood2$day, parenthood2$baby.sleep,
type = "l",
main = "Baby Sleep Patterns",
xlab = "Days",
ylab = "Hours Baby Sleeps",
col="blue")
plot(parenthood2$day, parenthood2$baby.sleep,
type = "l",
main = "Baby Sleep Patterns",
xlab = "Days",
ylab = "Hours Baby Sleeps",
col="purple")
plot(parenthood2$day, parenthood2$dan.sleep,
type = "l",
main = "Baby Sleep Patterns",
xlab = "Days",
ylab = "Hours Baby Sleeps",
col="blue")
plot(parenthood2$day, parenthood2$dan.sleep,
type = "l",
main = "Dan Sleep Patterns",
xlab = "Days",
ylab = "Hours Dan Sleeps",
col="blue")
cor(parenthood2$dan.sleep, parenthood2$baby.sleep)
cor(parenthood2$dan.sleep, X)
cor(parenthood2$dan.sleep, parenthood2$dan.grump)
cor(parenthood2$dan.sleep, parenthood2$baby.sleep)
dadSleep = parenthood2$dan.sleep
babySleep = parenthood2$baby.sleep
cor(dadSleep, babySleep)
cor(babySleep, dadSleep)
cor.test(babySleep, dadSleep)
plot(dadSleep, babySleep)
lm(dadSleep, babySleep)
abline(lm(dadSleep, babySleep))
lm(formula = dadSleep ~babySleep)
lm(dadSleep ~ babySleep)
plot(dadSleep ~ babySleep)
plot(lm(dadSleep ~ babySleep))
plot(dadSleep, babySleep)
abline(4.4791, 0.3085)
plot(lm(dadSleep ~ babySleep))
plot(dadSleep, babySleep,
xcol = "blue")
plot(dadSleep, babySleep,)
abline(4.4791, 0.3085)
warnings()
cor(dadSleep)
cor(parenthood2$dan.sleep)
`CD.mp&C.data...Sheet1` <- read.csv("~/Downloads/CD mp&C data - Sheet1.csv")
View(`CD.mp&C.data...Sheet1`)
moviesound <- read.csv("~/Downloads/moviesound.csv")
View(moviesound)
plot(moviesound$Sound.Silence, moviesound$enjoyment.percentage)
plot(moviesound$Sound.Silence, moviesound$info.correct)
plot(moviesound$Sound.Silence, moviesound$info.correct, type=scatter)
scatter.smooth(moviesound$Sound.Silence, moviesound$info.correct)
plot(moviesound$Sound.Silence, moviesound$enjoyment.percentage)
t.test(moviesound$enjoyment.percentage~moviesound$Sound.Silence)
t.test(moviesound$info.correct~moviesound$Sound.Silence)
t.test(moviesound$info.correct~moviesound$Sound.Silence, var=TRUE)
t.test(moviesound$enjoyment.percentage~moviesound$Sound.Silence, var=TRUE)
moviesound$Sound.Silence$sound
moviesound$Sound.Silence
moviesound$Sound.Silence[sound]
moviesound$Sound.Silence(sound)
wind.mos <- split(airquality$Wind, airquality$Month)
wind.mos
silent.enjoy <- split(moviesound$Sound.Silence, moviesound$enjoyment.percentage)
silent.enjoy
enjoyed.silent <- split(moviesound$enjoyment.percentage, moviesound$Sound.Silence)
enjoyed.silent
enjoyed.silent$`silent `
plot(enjoyed.silent$`silent `, enjoyed.silent$sound)
plot(moviesound$Sound.Silence, moviesound$enjoyment.percentage)
plot(moviesound$Sound.Silence, moviesound$enjoyment.percentage,
ylab = Enjoyment Percentage)
plot(moviesound$Sound.Silence, moviesound$enjoyment.percentage,
ylab = "Enjoyment Percentage")
plot(moviesound$Sound.Silence, moviesound$enjoyment.percentage,
ylab = "Enjoyment Percentage",
main = "Average Level of Enjoyment",
col="blue")
plot(moviesound$Sound.Silence, moviesound$enjoyment.percentage,
ylab = "Enjoyment Percentage",
main = "Average Level of Enjoyment",
col="lightblue")
plot(moviesound$Sound.Silence, moviesound$enjoyment.percentage,
ylab = "Information Retainment Percentage",
main = "Average Information Retention",
col="lightred")
plot(moviesound$Sound.Silence, moviesound$enjoyment.percentage,
ylab = "Information Retainment Percentage",
main = "Average Information Retention",
col="plum2")
plot(moviesound$Sound.Silence, moviesound$info.correct,
ylab = "Information Retainment Percentage",
main = "Average Information Retention",
col="plum2")
plot(moviesound$Sound.Silence, moviesound$sound.correct,
ylab = "Enjoyment Percentage",
main = "Average Level of Enjoyment",
col="blue")
plot(moviesound$Sound.Silence, moviesound$sound.correct,
ylab = "Percentage Correct",
main = "Correct Sound Related Information",
col="blue")
plot(moviesound$Sound.Silence, moviesound$nonsound.correct,
ylab = "Percentage Correct",
main = "Correct Non-Sound Related Information",
col="orange")
t.test(moviesound$sound.correct~moviesound$Sound.Silence, var=TRUE)
t.test(moviesound$nonsound.correct~moviesound$Sound.Silence, var=TRUE)
plot(enjoyed.silent$`silent `, enjoyed.silent$sound)
plot(enjoyed.silent)
enjoyed.silent
plot(enjoyed.silent, moviesound$Sound.Silence)
summary(moviesound)
summary(temp.plot)
solar.plot <- airquality$Solar.R
summary(solar.plot)
describe(solar.plot)
temp.plot <- airquality$Temp
summary(temp.plot)
library("psych", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
describe(moviesound)
var(moviesound)
var(moviesound$Sound.Silence$'sound')
var(enjoyed.silent)
var(moviesound$sound.correct)
t.test(moviesound$enjoyment.percentage~moviesound$Sound.Silence, var=TRUE)
enjoyed.silent
plot(density(enjoyed.silent$`silent `))
plot(density(enjoyed.silent$`sound `))
plot(density(enjoyed.silent$sound))
describe(moviesound)
#T-Tests(4)
t.test(moviesound$enjoyment.percentage~moviesound$Sound.Silence, var=TRUE)
plot(moviesound$Sound.Silence, moviesound$enjoyment.percentage,   #Enjoyment Boxplot
ylab = "Enjoyment Percentage",
main = "Average Level of Enjoyment",
col="lightblue")
summary(moviesound$Sound.Silence)
summary(moviesound$Sound.Silence, moviesound$enjoyment.percentage)
summary(moviesound$enjoyment.percentage)
describe(moviesound$enjoyment.percentage)
enjoyed.silent
describe(enjoyed.silent$`silent `)
var(enjoyed.silent$`silent `)
describe(enjoyed.silent$sound)
var(enjoyed.silent$sound)
#T-Tests(4)
t.test(moviesound$enjoyment.percentage~moviesound$Sound.Silence, var=TRUE)
overinfo.splits <- split(moviesound$info.correct, moviesound$Sound.Silence)
overinfo.splits
describe(overinfo.splits$`silent `)
var(overinfo.splits$`silent `)
describe(overinfo.splits$sound)
var(overinfo.splits$sound)
t.test(moviesound$info.correct~moviesound$Sound.Silence, var=TRUE)
soundinfo.splits <- split(moviesound$sound.correct, moviesound$Sound.Silence)
soundinfo.splits
describe(soundinfo.splits$`silent `)
var(soundinfo.splits$`silent `)
describe(soundinfo.splits$sound)
var(soundinfo.splits$sound)
t.test(moviesound$sound.correct~moviesound$Sound.Silence, var=TRUE)
nonsound.splits <- split(moviesound$nonsound.correct, moviesound$nonsound.correct)
nonsound.splits <- split(moviesound$nonsound.correct, moviesound$Sound.Silence)
describe(nonsound.splits$`silent `)
describe(nonsound.splits$`silent `)
var(nonsound.splits$`silent `)
describe(nonsound.splits$sound)
(nonsound.splits$sound)
var(nonsound.splits$sound)
nonsound.splits <- split(moviesound$nonsound.correct, moviesound$Sound.Silence)
t.test(moviesound$nonsound.correct~moviesound$Sound.Silence, var=TRUE)
describe(moviesound$enjoyment.percentage)
library("psych", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
summary(moviesound$enjoyment.percentage)
var(moviesound$sound.correct)
describe(enjoyed.silent$`silent `)
var(enjoyed.silent$`silent `)
describe(enjoyed.silent$sound)
var(enjoyed.silent$sound)
describe(soundinfo.splits$`silent `)
describe(soundinfo.splits$sound)
plot(moviesound$Sound.Silence, moviesound$sound.correct,           #Sound Related Boxplot
ylab = "Percentage Correct",
main = "Correct Sound Related Information",
col="blue")
plot(moviesound$Sound.Silence, moviesound$nonsound.correct,       #Non-Sound Related Boxplot
ylab = "Percentage Correct",
main = "Correct Non-Sound Related Information",
col="orange")
state.17 <- read.csv("~/Downloads/state-17.csv", header=FALSE)
View(state.17)
load("~/Desktop/.RData")
load("~/Desktop/Regional_Hip_Hop/.RData")
load("~/Desktop/Regional_Hip_Hop/.RData")
rm(atl_phon1)
rm(phon1)
str(data)
data$Break <- "."
data$Break <- NULL
data$Rhythm
summary(data$Rhythm)
subset(data, ARE == 'Atlanta')$Rhythm
atlRhythm <- subset(data, ARE == 'Atlanta')$Rhythm
summary(data$Rhythm)
summary(atlRhythm)
install.packages("Rserve")
library("Rserve")
Rserve()
Rserve()
Rserve('--no-save')
load("~/Desktop/.RData")
setwd("/Users/ChaDe/Desktop/Regional_Hip_Hop")
library(humdrumR)
corpus <- readHumdrum('Rhythmic Transcriptions/^[1-5]/*.txt')
as.data.frame(as.matrix(corpus), stringsAsFactors = FALSE) -> data
colnames(data) <- c('NoteValue', 'Stress', 'Rest', 'Lyrics')
data$Rhythm <- as.decimal(data$NoteValue)
corpus$ARE <- corpus %hum>% ~gsub(x = ARE, '\t*', '')
corpus$OTL <- corpus %hum>% ~gsub(x = OTL, '\t*', '')
corpus$COM <- corpus %hum>% ~gsub(x = COM, '\t*', '')
corpus$RRD <- corpus %hum>% ~gsub(x = RRD, '\t*', '')
data$OTL <- as.matrix(corpus, fieldnames = 'OTL')[,1]
data$COM <- as.matrix(corpus, fieldnames = 'COM')[,1]
data$ARE <- as.matrix(corpus, fieldnames = 'ARE')[,1]
data$Bar <- as.matrix(corpus, fieldnames = 'Bar')[,1]
setwd("/Users/ChaDe/Desktop/Regional_Hip_Hop")
library(humdrumR)
corpus <- readHumdrum('Rhythmic Transcriptions/^[1-5]/*.txt')
as.data.frame(as.matrix(corpus), stringsAsFactors = FALSE) -> data
colnames(data) <- c('NoteValue', 'Stress', 'Rest', 'Lyrics', 'Break')
data$Rhythm <- as.decimal(data$NoteValue)
corpus$ARE <- corpus %hum>% ~gsub(x = ARE, '\t*', '')
corpus$OTL <- corpus %hum>% ~gsub(x = OTL, '\t*', '')
corpus$COM <- corpus %hum>% ~gsub(x = COM, '\t*', '')
corpus$RRD <- corpus %hum>% ~gsub(x = RRD, '\t*', '')
data$OTL <- as.matrix(corpus, fieldnames = 'OTL')[,1]
data$COM <- as.matrix(corpus, fieldnames = 'COM')[,1]
data$ARE <- as.matrix(corpus, fieldnames = 'ARE')[,1]
data$Bar <- as.matrix(corpus, fieldnames = 'Bar')[,1]
60/60
60/120
60/117
(60/117)/2
RhymeData$`Tempo in BPM`
RhymeData$Title
data$OTL
subset(data, ARE == 'Atlanta')$NoteValue
data[data$Bar == 1 & data$OTL == 'LookinAss',]
View(RhymeData)
View(RhymeData)
data[data$OTL == 'Jefe',]
data[data$OTL == 'Jefe',]$NoteValue
60/128
(60/128)/(4/data[data$OTL == 'Jefe',]$NoteValue)
(60/128)/(4/data[data$OTL == 'Jefe']$NoteValue)
(60/128)/(4/data[data$OTL == 'Jefe']$NoteValue,)
(60/128)/(4/data[data$OTL == 'Jefe',]$NoteValue)
subset(data, OTL == "Jefe")$NoteValue
4/subset(data, OTL == "Jefe")$NoteValue
subset(data, OTL == "Jefe")$NoteValue/4
subset(data, OTL == "Jefe")$NoteValue
cumsum(subset(data, ARE =='Atlanta')$Rhythm) %% 1
barplot(table(cumsum(subset(data, ARE =='Atlanta')$Rhythm) %% 1))
barplot(tapply(X = rhymeData$`Tempo in BPM`, INDEX = rhymeData$City, FUN = mean))
RhymeData$`Syllables per line`
barplot(tapply(X = RhymeData$`Tempo in BPM`, INDEX = rhymeData$City, FUN = mean))
barplot(tapply(X = RhymeData$`Tempo in BPM`, INDEX = RhymeData$City, FUN = mean))
setwd("/Users/ChaDe/Desktop/Regional_Hip_Hop")
library(humdrumR)
corpus <- readHumdrum('Rhythmic Transcriptions/^[1-5]/*.txt')
as.data.frame(as.matrix(corpus), stringsAsFactors = FALSE) -> data
colnames(data) <- c('NoteValue', 'Stress', 'Rest', 'Lyrics', 'Break')
data$Rhythm <- as.decimal(data$NoteValue)
corpus$ARE <- corpus %hum>% ~gsub(x = ARE, '\t*', '')
corpus$OTL <- corpus %hum>% ~gsub(x = OTL, '\t*', '')
corpus$COM <- corpus %hum>% ~gsub(x = COM, '\t*', '')
corpus$RRD <- corpus %hum>% ~gsub(x = RRD, '\t*', '')
data$OTL <- as.matrix(corpus, fieldnames = 'OTL')[,1]
data$COM <- as.matrix(corpus, fieldnames = 'COM')[,1]
data$ARE <- as.matrix(corpus, fieldnames = 'ARE')[,1]
data$Bar <- as.matrix(corpus, fieldnames = 'Bar')[,1]
data$Tempo <- as.matrix(corpus, fieldnames = 'MM')[,1]
setwd("/Users/ChaDe/Desktop/Regional_Hip_Hop")
library(humdrumR)
corpus <- readHumdrum('Rhythmic Transcriptions/^[1-5]/*.txt')
as.data.frame(as.matrix(corpus), stringsAsFactors = FALSE) -> data
colnames(data) <- c('NoteValue', 'Stress', 'Rest', 'Lyrics', 'Break')
data$Rhythm <- as.decimal(data$NoteValue)
corpus$ARE <- corpus %hum>% ~gsub(x = ARE, '\t*', '')
corpus$OTL <- corpus %hum>% ~gsub(x = OTL, '\t*', '')
corpus$COM <- corpus %hum>% ~gsub(x = COM, '\t*', '')
corpus$RRD <- corpus %hum>% ~gsub(x = RRD, '\t*', '')
data$OTL <- as.matrix(corpus, fieldnames = 'OTL')[,1]
data$COM <- as.matrix(corpus, fieldnames = 'COM')[,1]
data$ARE <- as.matrix(corpus, fieldnames = 'ARE')[,1]
data$Bar <- as.matrix(corpus, fieldnames = 'Bar')[,1]
data$Tempo <- as.matrix(corpus, fieldnames = 'Tempo')[,1]
setwd("/Users/ChaDe/Desktop/Regional_Hip_Hop")
library(humdrumR)
corpus <- readHumdrum('Rhythmic Transcriptions/^[1-5]/*.txt')
as.data.frame(as.matrix(corpus), stringsAsFactors = FALSE) -> data
colnames(data) <- c('NoteValue', 'Stress', 'Rest', 'Lyrics', 'Break')
data$Rhythm <- as.decimal(data$NoteValue)
corpus$ARE <- corpus %hum>% ~gsub(x = ARE, '\t*', '')
corpus$OTL <- corpus %hum>% ~gsub(x = OTL, '\t*', '')
corpus$COM <- corpus %hum>% ~gsub(x = COM, '\t*', '')
corpus$RRD <- corpus %hum>% ~gsub(x = RRD, '\t*', '')
data$OTL <- as.matrix(corpus, fieldnames = 'OTL')[,1]
data$COM <- as.matrix(corpus, fieldnames = 'COM')[,1]
data$ARE <- as.matrix(corpus, fieldnames = 'ARE')[,1]
data$Bar <- as.matrix(corpus, fieldnames = 'Bar')[,1]
barplot(tapply(X = RhymeData$`bridges per line`, INDEX = RhymeData$City, FUN = mean))
barplot(data$Rhythm, data$Stress)
barplot(data$Rhythm, data$NoteValue)
subset(data, ARE == 'Atlanta')$Rhythm
subset(data, ARE == 'Atlanta')$Rhythm %>% table
subset(data, ARE == 'Atlanta')$Rhythm %>% table %>% barplot
cumsum(subset(data, ARE =='Atlanta')$Rhythm) %% 1
barplot(table(cumsum(subset(data, ARE =='Atlanta')$Rhythm) %% 1))
